
# alias em="emacsclient -t"
# alias emacsc="emacsclient -c -a emacs & disown"
alias dirs="dirs -v"

em() {
    # Checks if there's a frame open
    emacsclient -n -e "(if (> (length (frame-list)) 1) â€˜t)" 2> /dev/null | grep t &> /dev/null

    # start an emacs server if not
    if [ "$?" -eq "1" ]; then
        emacsclient -a '' -nqc "$@" &> /dev/null

    # otherwise connect to currently running server
    else
        emacsclient -nq "$@" &> /dev/null
    fi

}

emacsc() {
    emacsclient -c -a emacs $1 &
    disown
    # give emacs a chance to do its prints, the go to a new line to get a straight prompt
    sleep 1
    echo
}

set_prompt () {
    Last_Command=$? # Must come first!
    Blue='\[\e[01;34m\]'
    White='\[\e[01;37m\]'
    Red='\[\e[01;31m\]'
    Green='\[\e[01;32m\]'
    Reset='\[\e[00m\]'
    FancyX='\342\234\227'
    Checkmark='\342\234\223'

    # If it was successful, print a green check mark. Otherwise, print
    # a red X.
    if [[ $Last_Command == 0 ]]; then
        PS1="$Green$Checkmark "
    else
        PS1="$Red$FancyX "
    fi
    PS1+=`date +"%d%b%y-%T"`
    PS1+=' ${debian_chroot:+($debian_chroot)}\[\033[1;32m\]\u\[\033[1;35m\]@\[\033[1;32m\]\h:\[\033[1;34m\]\w\[\033[0m\]\$ '
}


with_fsl_linaro_462() {
    PATH=/orcam/env/dev/toolchain/fsl-linaro-toolchain-4.6.2/bin:$PATH \
    ARCH=arm \
    CROSS_COMPILE="arm-none-linux-gnueabi-" \
    $@
}

with_gcc_linaro_621() {
    PATH=/orcam/embedded/data/toolchains/gcc-linaro-6.2.1-2016.11-x86_64_arm-linux-gnueabihf/bin::$PATH \
    ARCH=arm \
    CROSS_COMPILE="arm-none-linux-gnueabi-" \
    $@
}

with_exynos_toolchain() {
    PATH=/homes/nivp/local/toolchains/aarch64-linux-android-4.9/bin:$PATH \
    ARCH=arm64 \
    CROSS_COMPILE="aarch64-linux-android-" \
    $@
}

with_atsamg55_toolchain() {
    PATH=/homes/nivp/local/toolchains/arm-gnu-4.8.4.371-linux-any/bin:$PATH \
    ARCH=cortex-m4 \
    CROSS_COMPILE="arm-none-eabi-gcc" \
    $@
}

